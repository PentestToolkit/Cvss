using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Text;

namespace PentestToolkit.Cvss
{
    public class CvssV2Score : INotifyPropertyChanged
    {
        public CvssV2Score()
        {
            BaseScore = new CvssV2BaseScore();
            TemporalScore = new CvssV2TemporalScore();
            EnvironmentalScore = new CvssV2EnvironmentalScore();
        }

        public event PropertyChangedEventHandler PropertyChanged;

        public CvssV2BaseScore BaseScore { get; }

        public CvssV2EnvironmentalScore EnvironmentalScore { get; }

        public CvssV2TemporalScore TemporalScore { get; }

        public string ToVectorString()
        {
            var builder = new StringBuilder();

            builder.Append("(");
            builder.Append(BaseScore.ToVectorString(true));
            builder.Append("/");
            builder.Append(EnvironmentalScore.ToVectorString(true));
            builder.Append("/");
            builder.Append(TemporalScore.ToVectorString(true));
            builder.Append(")");

            return builder.ToString();
        }

        private void NotifyPropertyChanged([CallerMemberName] string propertyName = "")
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
