using System.Collections.Generic;
using System.Collections.ObjectModel;

namespace PentestToolkit.Cvss
{
    internal static class CvssV3Weight
    {
        internal static ReadOnlyDictionary<CvssV3Enums.AttackComplexity, double> AttackComplexity = new ReadOnlyDictionary<CvssV3Enums.AttackComplexity, double>(new Dictionary<CvssV3Enums.AttackComplexity, double>
        {
            { CvssV3Enums.AttackComplexity.High, 0.44 },
            { CvssV3Enums.AttackComplexity.Low, 0.77 },
        });

        internal static ReadOnlyDictionary<CvssV3Enums.AttackVector, double> AttackVector = new ReadOnlyDictionary<CvssV3Enums.AttackVector, double>(new Dictionary<CvssV3Enums.AttackVector, double>
        {
            { CvssV3Enums.AttackVector.Network, 0.85 },
            { CvssV3Enums.AttackVector.Adjacent, 0.62 },
            { CvssV3Enums.AttackVector.Local, 0.55 },
            { CvssV3Enums.AttackVector.Physical, 0.2 },
        });

        internal static ReadOnlyDictionary<object, double> Impact = new ReadOnlyDictionary<object, double>(new Dictionary<object, double>
        {
            { CvssV3Enums.Confidentiality.None, 0 },
            { CvssV3Enums.Confidentiality.Low, 0.22 },
            { CvssV3Enums.Confidentiality.High, 0.56 },
            { CvssV3Enums.Integrity.None, 0 },
            { CvssV3Enums.Integrity.Low, 0.22 },
            { CvssV3Enums.Integrity.High, 0.56 },
            { CvssV3Enums.Availability.None, 0 },
            { CvssV3Enums.Availability.Low, 0.22 },
            { CvssV3Enums.Availability.High, 0.56 },
        });

        internal static ReadOnlyDictionary<CvssV3Enums.Scope, ReadOnlyDictionary<CvssV3Enums.PrivilegesRequired, double>> PrivilegesRequired = new ReadOnlyDictionary<CvssV3Enums.Scope, ReadOnlyDictionary<CvssV3Enums.PrivilegesRequired, double>>(new Dictionary<CvssV3Enums.Scope, ReadOnlyDictionary<CvssV3Enums.PrivilegesRequired, double>>()
        {
            {
                CvssV3Enums.Scope.Unchanged,
                new ReadOnlyDictionary<CvssV3Enums.PrivilegesRequired, double>(new Dictionary<CvssV3Enums.PrivilegesRequired, double>()
                {
                    { CvssV3Enums.PrivilegesRequired.None, 0.85 },
                    { CvssV3Enums.PrivilegesRequired.Low, 0.62 },
                    { CvssV3Enums.PrivilegesRequired.High, 0.27 },
                })
            },
            {
                CvssV3Enums.Scope.Changed,
                new ReadOnlyDictionary<CvssV3Enums.PrivilegesRequired, double>(new Dictionary<CvssV3Enums.PrivilegesRequired, double>()
                {
                    { CvssV3Enums.PrivilegesRequired.None, 0.85 },
                    { CvssV3Enums.PrivilegesRequired.Low, 0.68 },
                    { CvssV3Enums.PrivilegesRequired.High, 0.5 },
                })
            },
        });

        internal static ReadOnlyDictionary<CvssV3Enums.UserInteraction, double> UserInteraction = new ReadOnlyDictionary<CvssV3Enums.UserInteraction, double>(new Dictionary<CvssV3Enums.UserInteraction, double>
        {
            { CvssV3Enums.UserInteraction.None, 0.85 },
            { CvssV3Enums.UserInteraction.Required, 0.62 },
        });
    }
}
