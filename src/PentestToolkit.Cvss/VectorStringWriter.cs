using System;
using System.Reflection;

namespace PentestToolkit.Cvss
{
    internal static class VectorStringWriter<T> where T : struct, IComparable, IFormattable
    {
        internal static string Write(T value)
        {
            var name = typeof(T).GetTypeInfo().GetCustomAttribute<AbbreviationAttribute>()?.Value ?? typeof(T).Name;

            foreach (var memberInfo in typeof(T).GetTypeInfo().DeclaredMembers)
            {
                if (memberInfo.Name == value.ToString())
                {
                    var valueName = memberInfo.GetCustomAttribute<AbbreviationAttribute>()?.Value ?? memberInfo.Name;
                    return $"{name}:{valueName}";
                }
            }

            throw new InvalidOperationException($"Invalid value for {typeof(T).Name}, \"{value}\"");
        }
    }
}
