using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Text;

namespace PentestToolkit.Cvss
{
    public class CvssV3Score : INotifyPropertyChanged
    {
        public CvssV3Score()
        {
            BaseScore = new CvssV3BaseScore();
            TemporalScore = new CvssV3TemporalScore();
            EnvironmentalScore = new CvssV3EnvironmentalScore();
        }

        public event PropertyChangedEventHandler PropertyChanged;

        public CvssV3BaseScore BaseScore { get; }

        public CvssV3EnvironmentalScore EnvironmentalScore { get; }

        public CvssV3TemporalScore TemporalScore { get; }

        public string ToVectorString()
        {
            var builder = new StringBuilder();

            builder.Append("CVSS:3.0");
            builder.Append("/");
            builder.Append(BaseScore.ToVectorString(true));
            builder.Append("/");
            builder.Append(EnvironmentalScore.ToVectorString(true));
            builder.Append("/");
            builder.Append(TemporalScore.ToVectorString(true));

            return builder.ToString();
        }

        private void NotifyPropertyChanged([CallerMemberName] string propertyName = "")
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
